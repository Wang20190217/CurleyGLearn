#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"

zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')

while read local_ref local_oid remote_ref remote_oid
do
	if test "$local_oid" = "$zero"
	then
		# Handle delete
		:
	else
		if test "$remote_oid" = "$zero"
		then
			# New branch, examine all commits
			range="$local_oid"
			branceName=$(echo "${local_ref}" | grep -E "(dev)|((feature|hotfix)/(v[0-9]+\.[0-9]+(\.[0-9]+)?/)?(\w)+-(\w)+-[0-9]+(-v[0-9]+\.[0-9]+(\.[0-9]+)?)?)")
			if [ $? -ne 0 ]; then
			    echo "分支命名不符合规范, 已终止Push代码, 正确示例如下所示: "
			    echo "示例1：dev"
			    echo "示例2：feature/abc-xyz-0"
			    echo "示例3：feature/abc-xyz-112233"
			    echo "示例4：feature/abc-xyz-112233-v1.0"
			    echo "示例5：feature/v1.0.0/abc-xyz-112233"
          echo "示例6：hotfix/abc-xyz-0"
          echo "示例7：hotfix/abc-xyz-112233"
          echo "示例8：hotfix/abc-xyz-112233-v1.0"
          echo "示例9：hotfix/v1.0.0/abc-xyz-112233"
			    exit 1
			fi
		else
			# Update to existing branch, examine new commits
			range="$remote_oid..$local_oid"
		fi

		# Check for WIP commit
		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
		if test -n "$commit"
		then
			echo >&2 "Found WIP commit in $local_ref, not pushing"
			exit 1
		fi
	fi
done

exit 0
